/*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
//|| App->Errors
//|| Version 0.1
//||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/

    /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
    //|| Class
    //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/

    function Errors() {
        /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
        //|| Boot
        //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
        this.boot      = {};
        this.boot.head = function ( myMessage) {
            console.log("");
            console.log("||---------------------------------------------------------|");
            console.log("|| [" + app.bootstrap.step + "] " + myMessage);
            console.log("||---------------------------------------------------------|");
        }
        this.boot.ok   = function(myMessage) { console.log('   [✔] ' + myMessage); }
        this.boot.fail = function(myMessage) { console.log('   [X] ' + myMessage); };
        this.boot.data = function(myMessage, myIndent) {
            var i = (myIndent == undefined) ? 0 : myIndent;
            var s = "";
            for(x = 0; x <= i; x++) s = s + "   ";
            s += (i == 0) ? "[+] " : "[-]";
            console.log(s + myMessage);
        };
        /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
        //|| Random
        //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
        this.br       = function() { console.log("");};
        /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
        //|| Flow
        //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
        this.flow      = {};
        this.flow.func = function (myClass, myFile, myMessage) {
            if (app.debug) console.log("["+myClass+"]::"+myFile+":" + myMessage);
        }
        /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
        //|| Fata
        //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
        this.fatal      = {};
        this.fatal.quit = function (myMessage, e) {
            console.log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
            console.log("!! [FATAL QUIT ERROR] " + myMessage);
            if (typeof(e) != 'undefined') console.log(e);
            console.log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
            process.exit();
        }
    }

    /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
    //|| Initialize
    //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/

    Errors.prototype.initialize = function() {
        app.error.boot.head('0', 'Errors Section');
        app.error.boot.ok('Successfully loaded');
        app.error.br();
    };

    /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
    //|| Boot
    //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/


    /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
    //|| Error
    //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/

    Errors.prototype.error = function (myType, myMessage, myClass, myError) {
        var ignoreClass = ['query', 'route', 'route.begin', 'route.handler', 'route.step', 'route.complete', 'task.begin', 'chirp.complete'];
        /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
        //|| Class specified
        //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
        if (typeof (myClass) != 'undefined' && ignoreClass.indexOf(myClass) == -1) myMessage = '[' + myClass + '] ' + myMessage;
        var myUpper = myType.toUpperCase();
        /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
        //|| Configuration
        //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
        switch (myType) {
            /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
            //|| Routes
            //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
            case 'route'           :
                console.log("[ROUTING] -> " + myMessage);
                break;
            case 'route.begin'     :
                console.log('[ROUTE BEGIN] : ' + myMessage + ']');
                console.log('|------------------------------------------------------------------->');
                break;
            case 'route.handler'       :
                if (typeof (myError) == 'object' && typeof (myError.isTask) == 'boolean') {
                    console.log('   [' + myUpper + '  : ' + myError.step + '] ' + myMessage + ']');
                } else {
                    console.log('   [' + myUpper + ' HANDLER ERROR! - CHIRP IS NOT DEFINED!!! - ' + myMessage + ']');
                }
                break;
            case 'route.step'       :
                if (typeof (myError) == 'object' && typeof (myError.isTask) == 'boolean') {
                    console.log('   [' + myUpper + '     : ' + myError.step + '] : ' + myMessage + ']');
                } else {
                    console.log('   [' + myUpper + ' ERROR! - CHIRP IS NOT DEFINED!!! - ' + myMessage + ']');
                }
                break;
            case 'route.complete'   :
                if (typeof (myError) == 'object' && typeof (myError.isTask) == 'boolean') {
                    console.log('   [' + myUpper + ' : ' + myError.step + ' -> ' + myMessage + '] - COMPLETED ');
                } else {
                    console.log('   [' + myUpper + ' ERROR! - CHIRP IS NOT DEFINED!!! - ' + myMessage + ']');
                }
                break;
            /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
            //|| MYSQL QUery
            //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
            case 'service.start'   :
                console.log(' ');
                console.log('=================================================|');
                console.log('|| [Service has Started]');
                console.log('|| ' + myMessage);
                console.log('=================================================|');
                console.log(' ');
                break;
            /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
            //|| MYSQL QUery
            //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
            case 'query'   :
                console.log('   [' + myUpper + '] - ' + myMessage);
                break;
            case 'query.error'   :
                console.log('--------------------------------------|');
                console.log('[QUERY ERROR]');
                console.log('--------------------------------------|');
                console.log(myMessage);
                console.log(myError.error);
                console.log('--------------------------------------|');
                console.log('--------------------------------------|');
                break;
            /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
            //|| Task
            //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
            case 'task.begin'     :
                console.log("|--[ CHIRP BEGIN  ] ------|" + myMessage);
                break;
            case 'task.fail'  :
                console.log("|--[ CHIRP FAIL ] ------|");
                console.log(myMessage);
                console.log("|--[ CHIRP FAIL ] ------|");
                break;
            case 'task.complete'  :
                console.log("|--[ CHIRP ENDING ] ------|");
                console.log(myMessage);
                console.log(JSON.stringify(myError));
                console.log("|--[ CHIRP ENDING ] ------|");
                break;
            /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
            //|| Socket
            //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
            case 'socket.open'     :
                console.log("|--[ Socket Open  ] ------|" + myMessage);
                break;
            case 'socket.close'    :
                console.log("|--[ Socket Close ] ------|" + myMessage);
                break;
            case 'socket.message'  :
                console.log("|--[ Socket Message ] ------|" + myMessage + "|--[ /Socket Message ] ------|");
                break;
            /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
            //|| Routes
            //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
            case 'create'       :
                console.log("|--[ CREATE  ] ------|" + myMessage);
                break;
            case 'timeline'     :
                console.log("[TIMELINE] " + myMessage);
                break;
            case 'function'           :
                console.log("     [FUNCTION] " + myMessage);
                break;
            case 'function.result'    :
                console.log("     [FUNCTION.RESULT] " + myMessage);
                break;
            case 'boot.header'  :
                console.log("\r\n||----------------------------------------------------------------------------------\r\n|| Initializer Step : " + myMessage + "\r\n||----------------------------------------------------------------------------------");
                break;
            case 'boot'         :
                console.log('    [►] ' + myMessage);
                break;
            case 'boot.ok'      :
                console.log('    [✔] ' + myMessage);
                break;
            case 'boot.fail'    :
                console.log('    [X] ' + myMessage);
                break;
            case 'nonfatal'     :
                console.log("\r\n \r\n||====================================================================\r\n|| NON-FATAL ERROR \r\n|| " + myMessage + "\r\n||====================================================================");
                break;
            case 'fatal'        :
                console.log("\r\n \r\n||====================================================================\r\n|| FATAL ERROR \r\n|| " + myMessage + "\r\n||====================================================================");
                break;
            case 'response'     :
                console.log('    [QUERYOK] ' + myMessage);
                break;
            case 'debug'        :
                console.log("---------------------------------------------------------|");
                console.log("[DEBUGGING]");
                console.log("---------------------------------------------------------|");
                break;
            case 'watchdog'     :
                console.log('    [🐕] ' + myClass + ' - (' + new Date().toLocaleTimeString() + ') Running::' + myMessage);
                break;
            case 'watchdog.ok'  :
                console.log('    [🐕] ' + myClass + ' - (' + new Date().toLocaleTimeString() + ') Complete!');
                break;
            default             :
                console.log('UNKNOWN LOG TYPE:[' + myType + '] ' + myMessage);
                break;
        }
        /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
        //|| New
        //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/
        if (myType == 'fatal') process.exit();
    };
    /*||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||
    //|| Export Class
    //||=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-||*/

    module.exports = Errors;

